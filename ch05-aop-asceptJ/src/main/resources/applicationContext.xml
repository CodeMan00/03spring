<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    把对象交给spring容器，有spring容器统一创建，管理。-->

<!--    声明目标对象-->
    <bean id="someService" class="com.bjpowdernode.ba08.SomeServiceImpl"/>

<!--声明切面类对象-->
    <bean id="aspect" class="com.bjpowdernode.ba08.MyAspectJ"/>

<!--    声明自动代理生成器：使用aspectj框架内部的功能，创建目标对象的代理对象，
    创建代理对象是在内存中实现的，修改目标对象的内存结构，创建为代理对象，所以
    目标对象就是被修改后的代理对象。

    aspect-autoproxy：会把spring容器中的所有目标对象，一次性都生成代理对象。
-->


<!--    <aop:aspectj-autoproxy />-->


<!--    默认情况下，如果我们定义的目标类实现了接口，那么会优先使用jdk动态代理，但是我们希望使用cglib动态代理，
    那么我们加入属性  proxy-target-class='true'
-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>